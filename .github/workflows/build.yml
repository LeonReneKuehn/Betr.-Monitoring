name: Build and Deploy to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t sparkbank-app:latest .
          docker save sparkbank-app:latest > sparkbank-app.tar

      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BETR_MONITORING }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to server
        run: |
          scp -i ~/.ssh/deploy_key sparkbank-app.tar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/
          scp -i ~/.ssh/deploy_key docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/
          scp -i ~/.ssh/deploy_key nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/
          scp -i ~/.ssh/deploy_key Dockerfile ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/

      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'ENDSSH'
            cd ${{ secrets.DEPLOY_PATH }}
            docker load < sparkbank-app.tar
            rm sparkbank-app.tar
            docker-compose down
            docker-compose up -d --remove-orphans
            docker image prune -f
          ENDSSH

      - name: Cleanup
        if: always()
        run: rm -rf ~/.ssh
